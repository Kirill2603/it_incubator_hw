{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h1/AltMessage.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","styles","src","avatar","alt","StyleContent","Name","name","Text","message","Time","time","AlternativeMessage","messageData","alternativeMessageData","HW1","Affair","s","affair","priority","DeleteButton","onClick","deleteAffairCallback","_id","console","log","Affairs","mappedAffairs","data","map","a","ButtonBlock","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","value","onChange","e","currentTarget","GreetingContainer","users","addUserCallback","setName","length","alert","HW3","setUsers","userName","newUsersArray","push","uuidv4","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b40b76b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Affairs\":\"Affairs_Affairs__3E9re\",\"ButtonBlock\":\"Affairs_ButtonBlock__9BKcn\",\"Affair\":\"Affairs_Affair__nr1tY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__VEunm\",\"StyleContent\":\"Message_StyleContent__3rRYb\",\"Name\":\"Message_Name__1_Iq-\",\"Time\":\"Message_Time__29kLd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"AltMessage_Message__1UeeU\",\"StyleContent\":\"AltMessage_StyleContent__-uSMs\",\"Name\":\"AltMessage_Name__3gHUi\",\"Time\":\"AltMessage_Time__2IXfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2k6vT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2EeQx\",\"error\":\"Greeting_error__6ao4d\"};","import React from \"react\";\r\nimport styles from \"./Message.module.css\";\r\n\r\ntype MessageDataType = {\r\n  avatar: string;\r\n  name: string;\r\n  message: string;\r\n  time: string;\r\n};\r\n\r\nconst Message = (props: MessageDataType) => {\r\n  return (\r\n    <div className={styles.Message}>\r\n      <img src={props.avatar} alt=\"\" />\r\n      <div className={styles.StyleContent}>\r\n        <div>\r\n          <div className={styles.Name}>{props.name}</div>\r\n          <div className={styles.Text}>{props.message}</div>\r\n        </div>\r\n        <div className={styles.Time}>{props.time}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react'\r\nimport styles from \"./AltMessage.module.css\";\r\n\r\ntype MessageDataType = {\r\n    avatar: string;\r\n    name: string;\r\n    message: string;\r\n    time: string;\r\n};\r\n\r\nconst AlternativeMessage =(props:MessageDataType) => {\r\n    return (\r\n        <div className={styles.Message}>\r\n            <img src={props.avatar} alt=\"\" />\r\n            <div className={styles.StyleContent}>\r\n                <div>\r\n                    <div className={styles.Name}>{props.name}</div>\r\n                    <div className={styles.Text}>{props.message}</div>\r\n                </div>\r\n                <div className={styles.Time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlternativeMessage\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\nimport AlternativeMessage from \"./AlternativeMessage\";\r\n\r\nconst messageData = {\r\n  avatar:\r\n    \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n  name: \"Kitty\",\r\n  message:\r\n    \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dolorum ad iure expedita voluptates!\",\r\n  time: \"22:00\",\r\n};\r\n\r\nconst alternativeMessageData = {\r\n    avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTjALj6QDBDcZ37pD3z4UnTG5xKpwAozbCjjw&usqp=CAU\",\r\n    name: \"Batman\",\r\n    message: \"Hello\",\r\n    time: \"22:01\"\r\n}\r\n\r\n\r\nfunction HW1() {\r\n  return (\r\n    <div>\r\n        <hr/>\r\n      homeworks 1{/*should work (должно работать)*/}\r\n      <Message\r\n        avatar={messageData.avatar}\r\n        name={messageData.name}\r\n        message={messageData.message}\r\n        time={messageData.time}\r\n      />\r\n      {/*для личного творчества, могу проверить*/}\r\n\r\n      <AlternativeMessage\r\n          avatar={alternativeMessageData.avatar}\r\n          name={alternativeMessageData.name}\r\n          message={alternativeMessageData.message}\r\n          time={alternativeMessageData.time}\r\n      />\r\n        <hr/>\r\n        <hr/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HW1;\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n        console.log(props.affair._id)\r\n    }\r\n    return (\r\n        <div className={s.Affair}>\r\n            <span>{props.affair.name}</span>\r\n            <span>{props.affair.priority}</span>\r\n            <button className={s.DeleteButton} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from \"./Affairs.module.css\"\r\n\r\ntype AffairsPropsType = {\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter(\"all\")\r\n    }\r\n    const setHigh = () => {\r\n        props.setFilter(\"high\")\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter(\"middle\")\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter(\"low\")\r\n    }\r\n\r\n    return (\r\n        <div className={s.Affairs}>\r\n            {mappedAffairs}\r\n            <div className={s.ButtonBlock}>\r\n                <button onClick={setAll}>All</button>\r\n                <button onClick={setHigh}>High</button>\r\n                <button onClick={setMiddle}>Middle</button>\r\n                <button onClick={setLow}>Low</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\"\r\nexport type AffairType = { _id: number, name: string, priority: AffairPriorityType }\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => {\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter((a) => a.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => {\r\n    return affairs.filter((a) => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n\r\n            homeworks 2\r\n\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: any // need to fix any\r\n    addUser: (name: string) => void // need to fix any\r\n    error: any // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = s.error // need to fix with (?:)\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={(e) => setNameCallback(e.currentTarget.value)} className={inputClass}/>\r\n            <span>{error}</span>\r\n            <button onClick={() => addUser(name)}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<any>('') // need to fix any\r\n\r\n    const setNameCallback = (name: string) => { // need to fix any\r\n        setName(name) // need to fix\r\n    }\r\n    const addUser = (name: string) => {\r\n        addUserCallback(name)\r\n        alert(`Hello ${name} !`) // need to fix\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string// need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<any>([]) // need to fix any\r\n\r\n    const addUserCallback = (userName: string) => { // need to fix any\r\n        const newUsersArray = [...users]\r\n        newUsersArray.push({name: userName, _id: uuidv4()})\r\n        setUsers(newUsersArray) // need to fix\r\n    }\r\n    debugger\r\n    return (\r\n\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React from \"react\";\r\nimport styles from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={styles.App}>\r\n      <div>react homeworks:</div>\r\n      <HW1 />\r\n      <HW2/>\r\n      <HW3/>\r\n      {/*<HW4/>*/}\r\n      {/*<HW5/>*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}